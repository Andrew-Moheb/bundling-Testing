{"mappings":"IEKmC,ECYtB,EDjBb,QAAQ,GAAA,CAAI,gBAGZ,MAAM,EAAO,EAAE,CDDf,QAAQ,GAAA,CAAI,gBCIV,EAAK,IAAA,CAAK,CAAE,OAAA,CADqB,EDCjB,SCAK,SDAK,ECAI,GAC9B,QAAQ,GAAA,CAAI,MAAe,yBAA+B,EDC5D,EAAE;AACF,QAAQ,GAAA,CAFE,GAOV,QAAQ,GAAA,CEIC,AAAU,CADN,EFJC,CAAC,GAAI,GAAI,GAAG,EEKD,MAAA,CACnB,ACnBN;;;;;;;;CAQC,EACD,SAAiB,CAAK,CAAE,CAAQ,EAK9B,IAJA,IAAI,EACA,EAAQ,GACR,EAAS,EAAM,MAFnB,CAIO,EAAE,EAAQ,GAAQ,CACvB,IAAI,EAAU,EAAS,CAAK,CAAC,EAAM,CACnB,MAAA,IAAZ,GACF,CAAA,EAAS,AAAW,KAAA,IAAX,EAAuB,EAAW,EAAS,CADtD,CAGF,CACA,OAAO,CACT,EDFc,EEnBd;;;;;;;;;;;;;;;CAeC,EACD,SAAkB,CAAK,EACrB,OAAO,CACT,GFEM,EFJN,qBAAoB;AACpB,yBAAyB;AACzB,IAAI;A,2D","sources":["<anon>","main.js","exportApi.js","node_modules/lodash-es/sum.js","node_modules/lodash-es/_baseSum.js","node_modules/lodash-es/identity.js"],"sourcesContent":["console.log(`Exporting...`);\nconst $cfc5d1c40a594704$export$6adb642bd51927fd = 20;\nconst $cfc5d1c40a594704$export$494d083da011ade5 = [];\nconst $cfc5d1c40a594704$export$576b6dd9d68b37bc = function(product, quantity) {\n    $cfc5d1c40a594704$export$494d083da011ade5.push({\n        product: product,\n        quantity: quantity\n    });\n    console.log(`${quantity} ${product} Was Added To The Cart`);\n};\n\n\n/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */ function $888d3b01a66f78b5$var$baseSum(array, iteratee) {\n    var result, index = -1, length = array.length;\n    while(++index < length){\n        var current = iteratee(array[index]);\n        if (current !== undefined) result = result === undefined ? current : result + current;\n    }\n    return result;\n}\nvar $888d3b01a66f78b5$export$2e2bcd8739ae039 = $888d3b01a66f78b5$var$baseSum;\n\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */ function $e79c473b2396ff2f$var$identity(value) {\n    return value;\n}\nvar $e79c473b2396ff2f$export$2e2bcd8739ae039 = $e79c473b2396ff2f$var$identity;\n\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */ function $e7e36f0ccb479e24$var$sum(array) {\n    return array && array.length ? (0, $888d3b01a66f78b5$export$2e2bcd8739ae039)(array, (0, $e79c473b2396ff2f$export$2e2bcd8739ae039)) : 0;\n}\nvar $e7e36f0ccb479e24$export$2e2bcd8739ae039 = $e7e36f0ccb479e24$var$sum;\n\n\nconsole.log(`Importing...`);\n$cfc5d1c40a594704$export$576b6dd9d68b37bc(\"andrew\", 20);\nconst $efd3ba4ec2608b1d$var$a = $cfc5d1c40a594704$export$494d083da011ade5;\n//\nconsole.log($efd3ba4ec2608b1d$var$a);\nconst $efd3ba4ec2608b1d$var$array = [\n    10,\n    10,\n    10\n];\nconsole.log((0, $e7e36f0ccb479e24$export$2e2bcd8739ae039)($efd3ba4ec2608b1d$var$array)); // if (module.hot) {\n //   module.hot.accept();\n // }\n\n\n//# sourceMappingURL=index.4b385dbe.js.map\n","import '/exportApi.js';\r\n\r\nconsole.log(`Importing...`);\r\n\r\nimport * as mainObj from '/exportApi.js';\r\n\r\nmainObj.addToCart('andrew', 20);\r\nconst a = mainObj.Cart;\r\n//\r\nconsole.log(a);\r\n\r\nimport sum from 'lodash-es/sum.js';\r\n\r\nconst array = [10, 10, 10];\r\nconsole.log(sum(array));\r\n\r\n// if (module.hot) {\r\n//   module.hot.accept();\r\n// }\r\n","console.log(`Exporting...`);\r\n\r\nconst shoppingCart = 20;\r\nconst Cart = [];\r\n\r\nexport const addToCart = function (product, quantity) {\r\n  Cart.push({ product, quantity });\r\n  console.log(`${quantity} ${product} Was Added To The Cart`);\r\n};\r\n\r\nexport { Cart, shoppingCart };\r\n","import baseSum from './_baseSum.js';\nimport identity from './identity.js';\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nexport default sum;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nexport default baseSum;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n"],"names":["product","array","console","log","$cfc5d1c40a594704$export$494d083da011ade5","push","quantity","length","iteratee","result","index","current","undefined","value"],"version":3,"file":"index.4b385dbe.js.map"}